#+title: Budgeting
#+options: toc:nil

* Overview

These notes describe a proposed system of personal financial
accounting which (a) is equivalent to double-entry book-keeping; (b)
has transactions as the primary entity, rather than accounts; (c) has
some advantages for budgeting.

The motivating ideas here are:
- Accounting is traditionally about assets and liabilities, and their
  relation to expenses and income. The concept of “asset” is tricky:
  on one view, it is a cost that we expect will be matched with a
  revenue; on other view it is some kind of property right. Here,
  there are just obligations between people and those are just future
  transactions whose exact date we don't yet know.
- A “budget” is now a set of transactions that will occur in the future,
  and we do know when.

Contents:
2. Definitions
3. Examples of common transactions
4. Hierarchies of people and things
4. Producing statements
5. Rules for entering common transactions
6. Budgeting and planning


* Definitions

1. Fix, once and for all, a finite set, $\mathcal{P}$, of /persons/,
   representing the people and institutions in the world who might
   receive or provide goods, services, or favours to me. We assume
   that there is a distinguished member of $\mathcal{P}$ called
   _Self_.

2. A /period/ is a pair of dates, $t_1$ and $t_2$, such that
   $t_1\leqslant t_2$. The upper bound, $t_2$, may be one of the two
   special values “some day” or “any day” (and each of these is
   greater than any other date).

   A period represents the time during which a transaction may have
   occured. The special dates are used to represent an interval of
   which, at the time the transaction is known, the upper bound is
   unknown. The choice of “some day” or “any day” indicates which
   party has the option of choosing when the transaction occurs.

3. A /favour/ is
   1. an ordered pair, $(i, j)$, of people, $i,j\in \mathcal{P}$; 
   2. a non-negative number, $v$; and
   3. a period, $T$.

   A favour represents the provision of a good or service, of value
   $v$, to $j$ by $i$, sometime in period $T$. Person $i$ is called
   the /creditor/ and person $j$ the /debtor/.  We sometimes write the
   favour as $i \overset{v}{\to} j$, ignoring the period.

   For $k$ a person, we define the /credit value/ of a favour to $k$ as
   \begin{equation*}
   \pi_k^{\text Cr}(i\overset{v}{\to}j) =
   \begin{cases}
   v &\text{if $k = i$,} \\
   0 & \text{otherwise,}
   \end{cases}
   \end{equation*}
   and likewise the /debit value/ of a favour to $k$ is
   \begin{equation*}
   \pi_k^{\text Dr}(i\overset{v}{\to}j) =
   \begin{cases}
   v &\text{if $k = j$,} \\
   0 & \text{otherwise.}
   \end{cases}
   \end{equation*}
   
4. A /transaction/ is a set of favours, $f_n$, such that:
   \begin{equation*}
   \sum_n  \pi_k^{\text Cr}(f_n) = \sum_n \pi_k^{\text Dr}(f_n)
   \qquad\forall k\in\mathcal{P}.
   \end{equation*}
   That is, in any transaction each person enters equally as a
   creditor and a debtor. (Note that this constraint applies
   separately to each person but does not mention time.)

5. An /ledger/ is a set of transactions.


* Example transactions

The following are common transactions. Recall that, in a transaction,
the total credit value must equal the total debit value for each
person separately. Thus, apart from the degenerate case of a
zero-value favour, a transaction will involve at least two favours.

** Exchanges

The following is a list of common transaction types:

1. Someone does me a favour
2. I buy something from the supermarket with cash
3. I buy something from the supermarket with my bank card
4. I am paid for work.
5. I do work and credit “accounts receivable.” Later, work pays me.
6. I buy a car; it depreciates.
7. I use electricity and estimate my cost; then I pay the thing.
   
*** Someone does me a favour

You might think that this is uncommon. However, consider using a
utility: broadband, say, or electricity. Typically one pays for this
and other utilities in arrears and so, until one does so, one has in
fact been the debtor of a favour from the utility company.

Suppose I use £100 of electricity in March, supplied by PowerCo, which
I will pay at some point in the future. Then the transaction is
composed of two favours:
1. £100; _PowerCo_ to _Self_; 1 March to 31 March.  
2. £100; _Self_ to _PowerCo_; 1 April to Any Day.

The "Any Day" implies that the payment date is determined by
PowerCo. What if I know I will pay during April? Then the second
favour has 30 April as its upper bound. 

What if I want to record the payment? See later. What if my
consumption is an /estimate/ (by me)? See the section on budgeting.

*** I buy something with cash

For example, I buy £50 of groceries from Sainsburys on 1 March. The tricky
bit is that "cash" is a person. Here we have:

1. £50; _Sainsburys_ to _Self_; 1 March.
2. £50; _Cash_ to _Sainsburys_; 1 March.
3. £50; _Self_ to _Cash_; 1 March.

For brevity, an interval with the same upper and lower bound is just
written as the date.    

Note that this is a /three/-way transaction. In traditional
accounting, “Self” does not participate so the transaction is merely
between Cash and Sainsburys. On that view, some accounts, like Cash,
are assets and liabilities; and some, like “Sainsburys” are “nominal”
accounts. My sense is that for nominal accounts the account describes
the nature of the transaction (eg, "expense -- groceries") rather than
the other party.

On the other hand, “Self” is rather like the P&L account. In
traditional accounting, we run a zero-ing process every period which
takes all the expense and income through the P&L. I think this
approach is perhaps clearer.

*** I buy something with a bank card

Similar to buying something with cash:
1. £50; _Sainsburys_ to _Self_; 1 March
2. £50; _Bank/Current Account_ to _Sainsburys_; 1 March
3. £50; _Self_ to _Bank/Current Account_; 1 March.

Okay, one question here. We've introduced a hierarchy to indicate that
_Bank_ might well owe me favours from several different sources: my
current account, a savings account, and so on. What kind of hierarchy
is this? Is it purely for convenience? I will probably want to add up
favours by their due date ... but that's in the favour. Or by their
kind (eg, “groceries”). So ... perhaps it's more like namespacing? I
will have several “current accounts” at different banks?

*** I am paid for work

(I am paid in arrears.)
1. £100; _Self_ to _Job_; March
2. £100; _Job_ to _Bank/Current Account_; 1 April
3. £100; _Bank/Current Account_ to _Self_; 1 April

Here I am using a convenience feature wherein the interval “March”
abbreviates 1 March to 31 March (inclusive).

I'm not sure about the redundancy in favours (2) and (3).

*** Accounts receivable

Here the idea is that I record, in the system, the fact that I have
worked in March and am owed money but, at the time of recording, I
have not yet received the money; however I am certain that the money
will arrive before the end of April.

As a first pass, ignore the fact that I have a bank account.

Transaction 1:
1. £100; _Self_ to _Job_; March
2. (X) £100; _Job_ to _Self_; April

Transaction 2:
1. (X) £100; _Self_ to _Job_; April
2. £100; _Job_ to _Self_; 2 April

The idea is that the second transaction backs out the initial guess as
to the repayment date and replaces it with the actual one. The (X) are
the transactions which cancel out. (Maybe the second one should be
negative? I don't know. Probably it should be, since there really was
no _Self_ to _Job_ favour in April.)

We have to match the transactions. We could not have entered
transaction (2) as we did in the previous example because the “I do
work for _Job_” transaction would be double-counted.

Then, with the bank account, we enter transaction 1 just as we did
before:
1. £100; _Self_ to _Job_; March
2. (X) £100; _Job_ to _Self_; April

But now transaction 2 becomes:
1. (X) -£100; _Job_ to _Self_; April
2. £100; _Job_ to _Bank/Current Account_; 2 April
3. £100; _Bank/Current Account_ to _Self_; 2 April

where, again, we need to match the two (X) transactions.





** Budgeting

** Loans

** Notes from the examples

Do we need a description of the thing that a favour is for? Eg,
"electricity"? What is "something, only I don't know what it is yet"?

* Other characteristics

- Transactions have a “known-by” date, which is the date when the
  transaction was known about by the system. 

* Producing statements

* Rules for entering common transactions

* Budgeting and planning
